{"ast":null,"code":"import _classCallCheck from \"/Users/nyal/Desktop/Frontend Learning/Better Agile/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nyal/Desktop/Frontend Learning/Better Agile/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nyal/Desktop/Frontend Learning/Better Agile/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nyal/Desktop/Frontend Learning/Better Agile/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nyal/Desktop/Frontend Learning/Better Agile/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nyal/Desktop/Frontend Learning/Better Agile/src/Card.js\";\nimport React, { Component } from 'react';\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Card, _Component);\n\n  function Card(props) {\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Card).call(this, props));\n    _this.style = {\n      backgroundColor: \"white\",\n      margin: \"5px\",\n      border: \"2px solid black\",\n      borderRadius: \"4px\",\n      width: \"20%\",\n      boxShadow: \"1px 1px #545454\",\n      padding: \"10px\"\n    };\n\n    _this.clickHandler = function () {\n      console.log(_this.state);\n\n      if (_this.state.timer === 0) {\n        alert(\"TIME UP!\");\n        clearInterval(_this.state.interval);\n\n        _this.setState({\n          timer: _this.props.time,\n          interval: null\n        });\n      } else {\n        _this.setState({\n          timer: _this.state.timer - 1\n        });\n      }\n    };\n\n    _this.state = {\n      timer: Number(props.time),\n      interval: null,\n      outOfTime: false\n    };\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.outOfTime) {\n        return React.createElement(\"div\", {\n          style: this.style,\n          onClick: function onClick() {\n            return _this2.setState({\n              interval: setInterval(_this2.clickHandler, 1000)\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Case Name: \", this.props.caseName, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), \"Assignee: \", this.props.assignee, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), \"Estimate: \", this.props.estimate, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), this.state.timer);\n      } else {\n        React.createElement(\"div\", {\n          style: this.style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"Out of time!\");\n      }\n    }\n  }]);\n\n  return Card;\n}(Component);\n\nexport default Card;","map":{"version":3,"sources":["/Users/nyal/Desktop/Frontend Learning/Better Agile/src/Card.js"],"names":["React","Component","Card","props","style","backgroundColor","margin","border","borderRadius","width","boxShadow","padding","clickHandler","console","log","state","timer","alert","clearInterval","interval","setState","time","Number","outOfTime","setInterval","caseName","assignee","estimate"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,I;;;;;AACF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;AADe,UASnBC,KATmB,GASX;AACJC,MAAAA,eAAe,EAAE,OADb;AAEJC,MAAAA,MAAM,EAAE,KAFJ;AAGJC,MAAAA,MAAM,EAAE,iBAHJ;AAIJC,MAAAA,YAAY,EAAE,KAJV;AAKJC,MAAAA,KAAK,EAAE,KALH;AAMJC,MAAAA,SAAS,EAAE,iBANP;AAOJC,MAAAA,OAAO,EAAE;AAPL,KATW;;AAAA,UAmBnBC,YAnBmB,GAmBJ,YAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAjB;;AACA,UAAI,MAAKA,KAAL,CAAWC,KAAX,KAAqB,CAAzB,EAA4B;AACxBC,QAAAA,KAAK,CAAC,UAAD,CAAL;AACAC,QAAAA,aAAa,CAAC,MAAKH,KAAL,CAAWI,QAAZ,CAAb;;AACA,cAAKC,QAAL,CAAc;AACVJ,UAAAA,KAAK,EAAE,MAAKb,KAAL,CAAWkB,IADR;AAEVF,UAAAA,QAAQ,EAAE;AAFA,SAAd;AAIH,OAPD,MAOO;AACH,cAAKC,QAAL,CAAc;AACVJ,UAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AADhB,SAAd;AAGH;AACJ,KAjCkB;;AAEf,UAAKD,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEM,MAAM,CAACnB,KAAK,CAACkB,IAAP,CADJ;AAETF,MAAAA,QAAQ,EAAE,IAFD;AAGTI,MAAAA,SAAS,EAAE;AAHF,KAAb;AAFe;AAOlB;;;;6BA4BQ;AAAA;;AACL,UAAI,KAAKR,KAAL,CAAWQ,SAAf,EAA0B;AACtB,eACI;AAAK,UAAA,KAAK,EAAI,KAAKnB,KAAnB;AAA0B,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACgB,QAAL,CAAc;AAACD,cAAAA,QAAQ,EAAEK,WAAW,CAAC,MAAI,CAACZ,YAAN,EAAoB,IAApB;AAAtB,aAAd,CAAN;AAAA,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACgB,KAAKT,KAAL,CAAWsB,QAD3B,OACqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADrC,gBAEe,KAAKtB,KAAL,CAAWuB,QAF1B,OAEoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFpC,gBAGe,KAAKvB,KAAL,CAAWwB,QAH1B,OAGoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHpC,EAIK,KAAKZ,KAAL,CAAWC,KAJhB,CADJ;AAQH,OATD,MASO;AACH;AAAK,UAAA,KAAK,EAAI,KAAKZ,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGH;AACJ;;;;EAnDcH,S;;AAsDnB,eAAeC,IAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timer: Number(props.time),\n            interval: null,\n            outOfTime: false,\n        }\n    }\n\n    style = {\n        backgroundColor: \"white\",\n        margin: \"5px\",\n        border: \"2px solid black\",\n        borderRadius: \"4px\",\n        width: \"20%\",\n        boxShadow: \"1px 1px #545454\",\n        padding: \"10px\",\n    }\n\n    clickHandler = () => {\n        console.log(this.state);\n        if (this.state.timer === 0) {\n            alert(\"TIME UP!\");\n            clearInterval(this.state.interval);\n            this.setState({\n                timer: this.props.time,\n                interval: null,\n            })\n        } else {\n            this.setState({\n                timer: this.state.timer - 1\n            })\n        }\n    }\n    \n    render() {\n        if (this.state.outOfTime) {\n            return (  \n                <div style = {this.style} onClick={() => this.setState({interval: setInterval(this.clickHandler, 1000)})}>\n                    Case Name: {this.props.caseName} <br/>\n                    Assignee: {this.props.assignee} <br/>\n                    Estimate: {this.props.estimate} <br/>\n                    {this.state.timer}   \n                </div> \n            );\n        } else {\n            <div style = {this.style}>\n                Out of time!\n            </div>\n        }\n    }\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}